/*Archivo sass para crear funcionalidad mediante mixins, fuentes de letra importada, mapas y una funcion*/

@use 'sass:map';

$imagenes: (
  "movil": (
    url("../imagenes/hero_img_481x320.avif") type("image/avif"),
    url("../imagenes/hero_img_481x320.webp") type("image/webp"),
    url("../imagenes/hero_img_481x320.jpeg") type("image/jpeg")
  ),
  "tableta": (
    url("../imagenes/hero_img_768x511.avif") type("image/avif"),
    url("../imagenes/hero_img_768x511.webp") type("image/webp"),
    url("../imagenes/hero_img_768x511.jpeg") type("image/jpeg")
  ),
  "pantalla_pequeña": (
    url("../imagenes/hero_img_1200x798.avif") type("image/avif"),
    url("../imagenes/hero_img_1200x798.webp") type("image/webp"),
    url("../imagenes/hero_img_1200x798.jpeg") type("image/jpeg")
  ),
  "pantalla_grande": (
    url("../imagenes/hero_img_1920x1277.avif") type("image/avif"),
    url("../imagenes/hero_img_1920x1277.webp") type("image/webp"),
    url("../imagenes/hero_img_1920x1277.jpeg") type("image/jpeg")
  ),
  "pantalla_estandar": (
    url("../imagenes/hero_img_2700x1796.avif") type("image/avif"),
    url("../imagenes/hero_img_2700x1796.webp") type("image/webp"),
    url("../imagenes/hero_img_2700x1796.jpeg") type("image/jpeg")
  )
);



//Al haber descargado las fuentes de letra de Dafont el servicio no te deja usarlas modo html, por lo que se deben importar de manera local
@font-face {
    font-family: 'MilkAndHoney';
    src: url('../fuente_letra/MilkAndHoney.woff') format('woff');
}

@font-face {
    font-family: 'Classica-Bold';
    src: url('../fuente_letra/Classica-Bold.woff') format('woff');
}

@font-face {
    font-family: 'Classica-Book';
    src: url('../fuente_letra/Classica-Book.woff') format('woff');
}

@font-face {
    font-family: 'Fashion';
    src: url('../fuente_letra/Fashion.woff') format('woff');
}

@font-face {
    font-family: 'LTMuseum-Bold';
    src: url('../fuente_letra/LTMuseum-Bold.woff') format('woff');
}

@font-face {
    font-family: 'LTMuseum-light';
    src: url('../fuente_letra/LTMuseum-Light.woff') format('woff');
}

//Creacion de un mapa para los colores principal y secundarios
$colores: (
    "principal"  : #372715,
    "secundario_uno" : #684825,
    "secundario_dos" : #9D774C,
);
//Creacion de un mapa para importar con facilidad las letras
$fuentes: (
    "MilkAndHoney" : "MilkAndHoney",
    "Classica-Bold" : "Classica-Bold",
    "Classica-Book" : "Classica-Book",
    "Fashion" : "Fashion",
    "LTMuseum-Bold" : "LTMuseum-Bold",
    "LTMuseum-Light" : "LTMuseum-Light")
;





/*Mixins para diferentes puntos de ruptura, que se aplican desde el ancho de corrección hasta el máximo siguiente
+1 pixel para cambiar el estandar de un dispositivo a otro*/

@mixin movil(){
    @media (min-width: 360px) and (max-width: 480px)  {
        @content;    
    }
}

@mixin tableta(){
    @media (min-width: 481px) and (max-width: 768px) {
        @content;    
    }
}

@mixin pantalla_pequeña(){
    @media (min-width: 769px) and (max-width: 1200px) {
        @content;    
    }
}

@mixin pantalla_estandar(){
    @media (min-width: 1201px) and (max-width: 1920px) {
        @content;    
    }
}

@mixin pantalla_grande(){
    @media (min-width: 1921px) {
        @content;    
    }
}



/*Funcion que comprueba si un elemento/selector tiene una fuente desesada, si no la tiene se la cambia
y si la tiene no hace mas cambios, aquí se coloca un operador logico ==*/
@function comprobar_y_cambiar_fuente($selector, $fuente_deseada) {
    @if map.get($fuentes, $fuente_deseada) == $selector {
        @return $selector;
    } @else {
        @return map.get($fuentes, $fuente_deseada);
    }
}

/*la funcion como tal no se puede aplicar sola, se necesita de un mixin de apoyo, por lo que se añade el paso final
para aplicar el contenido css en font-family*/
@mixin aplicar_fuente($selector, $fuente_deseada) {
    font-family: comprobar_y_cambiar_fuente($selector, $fuente_deseada);
}